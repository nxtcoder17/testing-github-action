name: 'build kloudlite api action'
description: 'builds kloudlite APIs'

inputs:
  github_token:
    description: 'GitHub Token'
    required: true

  save_go_cache:
    description: 'save_go_cache'
    type: boolean
    default: true
    required: false

  directory:
    description: 'cd to this directory'
    default: api

  # env vars
  GOMODCACHE: 
    description: go env-var
    default: ".go-mod-cache"

  GOCACHE: 
    description: go env-var
    default: ".go-cache"

runs:
  using: 'composite'
  steps:
    - shell: bash
      run: |+
        git clone https://github.com/kloudlite/api ${{ inputs.directory }}
        cd ${{inputs.directory}}
        git checkout main

    - name: setup ENV Variables
      shell: bash
      run: |+
        echo "GOMODCACHE=${{github.workspace}}/actions/go-mod-cache" >> $GITHUB_ENV
        echo "GOCACHE=${{github.workspace}}/actions/go-cache" >> $GITHUB_ENV

    # - name: Install NIX
    #   uses: DeterminateSystems/nix-installer-action@main
    #
    # - name: nix cache
    #   uses: DeterminateSystems/magic-nix-cache-action@main
    #
    # - name: nix flake check
    #   uses: DeterminateSystems/flake-checker-action@main
    #   with:
    #     flake-lock-path: "./${{inputs.directory}}/flake.lock"
    #
    # - name: Nix Develop Action
    #   uses: nicknovitski/nix-develop@v1.1.0
    #   with:
    #     arguments: "./${{ inputs.directory }}#default"

    - name: setup
      id: setup
      uses: ./.github/actions/setup
      with:
        nix-develop-arguments: "./api#default"
        flake-lock: ./api/flake.lock
        cache_paths: |+
          ${{ env.GOMODCACHE }}
          ${{ env.GOCACHE }}

    - name: Setup Caches
      uses: actions/cache@v4
      env:
        cache-name: go-cache-${{ github.repository_id }}
      with:
        path: |+
          ${{ env.GOMODCACHE }}
          ${{ env.GOCACHE }}
        key: ${{ runner.os }}-${{github.repository_id}}-${{ inputs.directory }}-setup-${{ hashFiles('./api/go.sum', './api/go.mod', env.GOMODCACHE, env.GOCACHE) }}
        save-always: true
        restore-keys: |
          ${{ runner.os }}-${{github.repository_id}}-${{ inputs.directory }}-setup-
          ${{ runner.os }}-${{github.repository_id}}-

    - name: build auth
      shell: bash
      env:
        GOMODCACHE: ${{ env.GOMODCACHE }}
        GOCACHE: ${{ env.GOCACHE }}

        IMAGE_TAG: ${{ steps.setup.outputs.image_tag }}
      working-directory: "./api/apps/auth"
      run: |+
        echo "image tag: ${IMAGE_TAG}"
        task build

    - name: build console
      shell: bash
      env:
        GOMODCACHE: ${{ env.GOMODCACHE }}
        GOCACHE: ${{ env.GOCACHE }}

        IMAGE_TAG: ${{ steps.setup.outputs.image_tag }}
      working-directory: "./api/apps/console"
      run: |+
        echo "image tag: ${IMAGE_TAG}"

        task build
